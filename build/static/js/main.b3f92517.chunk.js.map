{"version":3,"sources":["config/firebaseConfig.js","controllers/firebaseDB.js","contexts/AuthContext.js","contexts/BabyRecordsContext.js","components/Layout/Home.jsx","components/Dashboard/BabyEventButton.jsx","components/Dashboard/BabyEventLegend.jsx","components/Dashboard/BabyEventWidget.jsx","components/Dashboard/BabyEventWidgetContainer.jsx","config/activities.js","components/Dashboard/Dashboard.jsx","components/Layout/Footer.jsx","components/Layout/NavBar.jsx","components/Layout/Layout.jsx","components/Auth/Login.jsx","controllers/inputValidator.js","components/Auth/Register.jsx","components/Reports/ReportTable.jsx","components/Reports/Reports.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","AuthContext","createContext","AuthContextProvider","props","useState","isAuthed","setIsAuthed","auth","onAuthStateChanged","user","Provider","value","userLoggedIn","uid","localStorage","setItem","userLoggedOut","removeItem","signOut","then","catch","err","console","error","code","message","children","BabyRecordsContext","BabyRecordsContextProvider","useContext","babyRecords","setBabyRecords","lastRecords","setLastRecords","loadAllUserData","getItem","res","collection","doc","orderBy","get","allRecords","forEach","push","data","Error","loadBabyRecordsByTimeAsc","records","lastRecordsByType","feed","pee","poop","sleep","Promise","resolve","reject","a","getLastRecord","arr","recs","type","where","limit","lastPee","lastFeed","lastPoop","lastSleep","loadBabyLastRecords","newEventAdded","newBabyRec","length","Home","id","role","aria-label","BabyEventButton","icon","newEvent","handleClick","e","preventDefault","comment","time","Timestamp","fromDate","Date","add","addBabyRecords","onClick","BabyEventLegend","render","agoString","className","Component","BabyEventWidget","lastBabyActivity","toDate","targetDate","diffInMinutes","differenceInMinutes","hoursAgo","parseInt","minsAgo","buildAgoString","BabyEventWidgetContainer","allActivities","label","Dashboard","useEffect","to","map","act","i","Footer","href","NavBar","loggedInBefore","navLinks","Layout","Login","email","password","loginInfo","setLoginInfo","validationErrors","setValidationErrors","handleInputChange","target","name","redirectAuthedUser","onSubmit","signInWithEmailAndPassword","onChange","placeholder","min","required","autoFocus","validateMinLength","str","minLength","Register","firstName","lastName","country","confirmPassword","babyName","registerInfo","setRegisterInfo","pwdA","pwdB","validEmail","validPwdLength","validPwdMatch","createUserWithEmailAndPassword","newUserInfo","set","ReportTable","getEmoji","activityString","activities","filter","content","rows","prevRowData","row","isSameDay","format","colSpan","Reports","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3f92517.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n  apiKey: \"AIzaSyATYA5g7ShVwfVxDs9B23IXw7hN_xH2Hxg\",\r\n  authDomain: \"babytimes-9476d.firebaseapp.com\",\r\n  databaseURL: \"https://babytimes-9476d.firebaseio.com\",\r\n  projectId: \"babytimes-9476d\",\r\n  storageBucket: \"babytimes-9476d.appspot.com\",\r\n  messagingSenderId: \"702098493706\"\r\n}\r\n// Initialize Cloud firestore through Firebase \r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import firebase from \"../config/firebaseConfig\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport const loadBabyRecordsByTimeAsc = uid => {\r\n  if (uid) {\r\n    let res = [];\r\n\r\n    // Gets recrods sorted from oldest to newest\r\n    return db\r\n      .collection(\"records\")\r\n      .doc(uid)\r\n      .collection(\"activities\")\r\n      .orderBy(\"time\", \"desc\")\r\n      .get()\r\n      .then(allRecords => {\r\n        allRecords.forEach(doc => res.push(doc.data()));\r\n        return res;\r\n      })\r\n      .catch(err => err);\r\n  }\r\n  throw Error(\"notAuthed\");\r\n};\r\n\r\nexport const loadBabyLastRecords = uid => {\r\n  if (uid) {\r\n    let lastRecordsByType = {\r\n      feed: null,\r\n      pee: null,\r\n      poop: null,\r\n      sleep: null\r\n    };\r\n\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n       \r\n        const getLastRecord = arr => arr.forEach(recs => lastRecordsByType[recs.data().type] = recs.data());\r\n        \r\n        const lastPee = (\r\n          await db\r\n            .collection(\"records\")\r\n            .doc(uid)\r\n            .collection(\"activities\")\r\n            .where(\"type\", \"==\", \"pee\")\r\n            .orderBy(\"time\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n        );\r\n  \r\n        const lastFeed = (\r\n          await db\r\n            .collection(\"records\")\r\n            .doc(uid)\r\n            .collection(\"activities\")\r\n            .where(\"type\", \"==\", \"feed\")\r\n            .orderBy(\"time\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n        );\r\n  \r\n        const lastPoop = (\r\n          await db\r\n            .collection(\"records\")\r\n            .doc(uid)\r\n            .collection(\"activities\")\r\n            .where(\"type\", \"==\", \"poop\")\r\n            .orderBy(\"time\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n        );\r\n  \r\n        const lastSleep = (\r\n          await db\r\n            .collection(\"records\")\r\n            .doc(uid)\r\n            .collection(\"activities\")\r\n            .where(\"type\", \"==\", \"sleep\")\r\n            .orderBy(\"time\", \"desc\")\r\n            .limit(1)\r\n            .get()\r\n        );\r\n        \r\n        getLastRecord(lastFeed);\r\n        getLastRecord(lastPee);\r\n        getLastRecord(lastPoop);\r\n        getLastRecord(lastSleep);\r\n  \r\n        return resolve(lastRecordsByType);\r\n      } catch (err) {\r\n        return reject(err);\r\n      }\r\n    });\r\n  }\r\n  throw Error(\"notAuthed\");\r\n};\r\n\r\nexport const addBabyRecords = ({ comment, time, type, uid }) => {\r\n  if (uid) {\r\n    return db\r\n      .collection(\"records\")\r\n      .doc(uid)\r\n      .collection(\"activities\")\r\n      .add({ comment, time, type })\r\n  }\r\n  throw Error(\"notAuthed\");\r\n};\r\n\r\n/*\r\nFirst register the new user, then create a new collection called \"users\"\r\nand put the baby name in it, in the future this collection will hold additional \r\nuser info\r\n*/\r\nexport const registerUser = (email, password, babyName) => {\r\n  return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n    .then(newUserInfo => {\r\n      db\r\n        .collection(\"users\")\r\n        .doc(newUserInfo.user.uid)\r\n        .set({ babyName });\r\n      \r\n      return newUserInfo.user.uid;\r\n    })\r\n    .catch(err => {\r\n      console.error(`Error at registerUser() \\n Error Code: ${err.code} \\n Msg: ${err.message}`)\r\n      return false;\r\n    });\r\n}\r\n\r\nexport const loginUserToFirebase = (email, password) => {\r\n  return firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .catch(err => {\r\n      if (err.code === \"auth/wrong-password\") {\r\n        throw new Error(\"Hmmm, looks that's not your password. Try again please.\");\r\n      } else if (err.code === \"auth/invalid-email\" || err.code === \"auth/user-not-found\") {\r\n        throw new Error(\"We've never seen that email before. Please double-check.\");\r\n      } else {\r\n        throw new Error(\"Hmmm... something's please try again in a couple of minutes.\");\r\n      }\r\n    })\r\n}\r\n\r\nexport const logoutUserFromFirebase = () => {\r\n  firebase.auth().signOut()\r\n    .then(() => {\r\n    // Sign-out successful.\r\n    })\r\n    .catch(err => {\r\n      console.error(`Error at logoutUser() \\n Error Code: ${err.code} \\n Msg: ${err.message}`)\r\n    })\r\n}","import React, { createContext, useState } from \"react\";\r\nimport { logoutUserFromFirebase } from \"../controllers/firebaseDB\";\r\nimport firebase from \"../config/firebaseConfig\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = props => {\r\n  const [ isAuthed, setIsAuthed ] = useState(false);\r\n\r\n  const userLoggedIn = uid => {\r\n    localStorage.setItem(\"babyPatrolUID\", uid);\r\n    setIsAuthed(true);\r\n  }\r\n\r\n  const userLoggedOut = () => {\r\n    localStorage.removeItem(\"babyPatrolUID\");\r\n    setIsAuthed(false); // Update context\r\n    logoutUserFromFirebase(); // Update Firebase\r\n\r\n  }\r\n\r\n  //Auth State Observer\r\n  firebase.auth().onAuthStateChanged(user => {\r\n    //   if (user) {\r\n    //\r\n    // } else {\r\n\r\n    // }\r\n  });\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthed, userLoggedIn, userLoggedOut }}>\r\n      { props.children }\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider;","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { \r\n  loadBabyRecordsByTimeAsc,\r\n  loadBabyLastRecords\r\n} from \"../controllers/firebaseDB\"\r\n\r\nexport const BabyRecordsContext = createContext();\r\n\r\nconst BabyRecordsContextProvider = props => {\r\n  const { isAuthed } = useContext(AuthContext);\r\n  const [ babyRecords, setBabyRecords ] = useState([]);\r\n  const [ lastRecords, setLastRecords ] = useState(null);\r\n  /*\r\n  lastRecords: {\r\n    feed: { comment, time, type },\r\n    pee: { comment, time, type },\r\n    poop: { comment, time, type },\r\n    sleep: { comment, time, type }\r\n  }\r\n  */\r\n\r\n  const loadAllUserData = () => {\r\n    if (isAuthed) {\r\n      const uid = localStorage.getItem(\"babyPatrolUID\");\r\n\r\n      loadBabyRecordsByTimeAsc(uid)\r\n        .then(records => setBabyRecords(records))\r\n        .catch(err => console.error(\"Error trying to loadAllUserData() \\n Err >\", err));\r\n      \r\n      loadBabyLastRecords(uid)\r\n        .then(lastRecords => setLastRecords(lastRecords))\r\n        .catch(err =>  console.error(\"Error trying to loadBabyLastRecords() \\n Err >\", err))\r\n    } else {\r\n      setBabyRecords(\"notAuthed\");\r\n      setLastRecords(\"notAuthed\");\r\n    }\r\n  }\r\n\r\n  const newEventAdded = (newBabyRec ) => {\r\n    if (babyRecords.length) {\r\n      setBabyRecords([...babyRecords, newBabyRec]);\r\n      setLastRecords({\r\n        ...lastRecords,\r\n        [newBabyRec.type]: newBabyRec \r\n      });\r\n    } else {\r\n      setBabyRecords([ newBabyRec ]);\r\n      setLastRecords({ [newBabyRec.type]: newBabyRec  });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BabyRecordsContext.Provider value={{ babyRecords, lastRecords, loadAllUserData, newEventAdded }}>\r\n      {props.children}\r\n    </BabyRecordsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default BabyRecordsContextProvider;\r\n","import React from \"react\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div id=\"bp-landingPageContainer\">\r\n      <div id=\"bp-landingPage-welcome\">\r\n        <p>\r\n          As a parent, keeping track of everything about your baby can be\r\n          overwhelming. With Baby Patrol,\r\n          keeping track of your baby's most important activities, is easy.\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"feed\">\r\n              🍼\r\n            </span>\r\n            Feeding\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"pee\">\r\n              💦\r\n            </span>\r\n            Peeing\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"poop\">\r\n              💩\r\n            </span>\r\n            Pooping\r\n          </li>\r\n          <li>\r\n            <span role=\"img\" aria-label=\"sleep\">\r\n              💤\r\n            </span>\r\n            Sleeping\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          Have the records ready for your next doctor's appointment, or to try to\r\n          find out why your baby is crying.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment } from \"react\";\r\nimport { addBabyRecords } from \"../../controllers/firebaseDB\";\r\nimport firebase from \"../../config/firebaseConfig\";\r\n\r\nconst BabyEventButton = props => {\r\n  const { type, icon, newEvent } = props;\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault();\r\n    const newBabyRec = {\r\n      comment: \"fire\",\r\n      time: new firebase.firestore.Timestamp.fromDate(new Date()),\r\n      type,\r\n      uid: localStorage.getItem(\"babyPatrolUID\")\r\n    };\r\n\r\n    // Updates Firebase\r\n    try {\r\n      addBabyRecords(newBabyRec);\r\n    } catch (err) {\r\n      console.error(\"Error trying to addBabyRecords >>>\", err.message);\r\n    }\r\n    // Updates context\r\n    newEvent(newBabyRec);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button onClick={e => handleClick(e)}>\r\n        <h2>\r\n          <span role=\"img\" aria-label={type}>\r\n            {icon}\r\n          </span>\r\n        </h2>\r\n      </button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BabyEventButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BabyEventLegend extends Component {\r\n  render = () => {\r\n    const { agoString } = this.props;\r\n\r\n    return (\r\n      <span className=\"bp-fromNowLegend\">\r\n        <i className=\"fas fa-history\"></i>\r\n        {agoString}\r\n      </span>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BabyEventLegend;\r\n","import React, { useContext } from \"react\";\r\nimport { BabyRecordsContext } from \"../../contexts/BabyRecordsContext\";\r\nimport { differenceInMinutes } from \"date-fns\";\r\n\r\n// Components\r\nimport BabyEventButton from \"./BabyEventButton\";\r\nimport BabyEventLegend from \"./BabyEventLegend\";\r\n\r\nconst BabyEventWidget = props => {\r\n  const { lastRecords, newEventAdded } = useContext(BabyRecordsContext);\r\n\r\n  const buildAgoString = targetDate => {\r\n    if (targetDate) {\r\n      const diffInMinutes = differenceInMinutes(new Date(), targetDate);\r\n      const hoursAgo = parseInt(diffInMinutes / 60);\r\n      const minsAgo = diffInMinutes % 60;\r\n      let result;\r\n\r\n      if (hoursAgo > 0) {\r\n        result = `${hoursAgo} hours and ${minsAgo} minutes ago`;\r\n      } else {\r\n        result = `${minsAgo} minutes ago`;\r\n      }\r\n\r\n      return result;\r\n    }\r\n    return \"No time available for this event\";\r\n  };\r\n\r\n  let lastBabyActivity = null;\r\n\r\n  if (lastRecords && lastRecords[props.type]) {\r\n    lastBabyActivity = lastRecords[props.type].time.toDate();\r\n  }\r\n\r\n  return (\r\n    <div id={`bp-${props.type}Widget`} className=\"bp-eventWidget\">\r\n      <BabyEventButton\r\n        newEvent={newBabyRec => newEventAdded(newBabyRec)}\r\n        icon={props.icon}\r\n        type={props.type}\r\n      />\r\n      <BabyEventLegend\r\n        type={props.type}\r\n        agoString={\r\n          lastBabyActivity\r\n            ? buildAgoString(lastBabyActivity)\r\n            : \"No info available\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BabyEventWidget;\r\n","import React from \"react\";\r\n\r\nconst BabyEventWidgetContainer = ({children}) => {\r\n  return (\r\n    <div id=\"bp-bodyWrapper\">\r\n      <div id=\"bp-eventsWidgetContainer\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BabyEventWidgetContainer;\r\n","const allActivities = [\r\n    {\r\n        label: \"feed\",\r\n        icon: \"🍼\"\r\n    },\r\n    {\r\n        label: \"pee\",\r\n        icon: \"💦\"\r\n    },\r\n    {\r\n        label: \"poop\",\r\n        icon: \"💩\"\r\n    },\r\n    {\r\n        label: \"sleep\",\r\n        icon: \"💤\"\r\n    }\r\n];\r\n\r\nexport default allActivities;","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { BabyRecordsContext } from \"../../contexts/BabyRecordsContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport BabyEventWidget from \"./BabyEventWidget\";\r\nimport BabyEventWidgetcontainer from \"./BabyEventWidgetContainer\";\r\nimport \"./dashboard.css\";\r\n\r\nimport allActivities from \"../../config/activities\";\r\n\r\nconst Dashboard = props => {\r\n  const { isAuthed } = useContext(AuthContext);\r\n  const { loadAllUserData } = useContext(BabyRecordsContext);\r\n\r\n  useEffect(() => {\r\n    loadAllUserData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isAuthed ? <Redirect to=\"/login\" /> : null}\r\n      <BabyEventWidgetcontainer>\r\n        {allActivities.map((act, i) => (\r\n          <BabyEventWidget key={i} icon={act.icon} type={act.label} />\r\n        ))}\r\n      </BabyEventWidgetcontainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <footer>\r\n      Created by\r\n      <a href=\"https://www.jeanpaulgiraldo.com\"> Jean Paul Giraldo</a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nconst NavBar = props => {\r\n  const { isAuthed, userLoggedIn, userLoggedOut } = useContext(AuthContext);\r\n\r\n  // Check if user was loggedIn before\r\n  useEffect(() => {\r\n    const loggedInBefore = localStorage.getItem(\"babyPatrolUID\");\r\n\r\n    if (loggedInBefore) {\r\n      userLoggedIn(loggedInBefore);\r\n    } else {\r\n      userLoggedOut();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isAuthed]);\r\n\r\n  let navLinks = (\r\n    <div className=\"bp-nav-linksContainer\">\r\n      <NavLink className=\"bp-nav-links\" to=\"/login\">\r\n        Login\r\n      </NavLink>\r\n      <NavLink className=\"bp-nav-links\" to=\"/register\">\r\n        Register\r\n      </NavLink>\r\n    </div>\r\n  );\r\n\r\n  if (isAuthed) {\r\n    navLinks = (\r\n      <div className=\"bp-nav-linksContainer\">\r\n        <NavLink className=\"bp-nav-links\" to=\"/dashboard\">\r\n          Dashboards\r\n        </NavLink>\r\n        <NavLink className=\"bp-nav-links\" to=\"/reports\">\r\n          Reports\r\n        </NavLink>\r\n        <NavLink className=\"bp-nav-links\" to=\"/\" onClick={userLoggedOut}>\r\n          Logout\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div>\r\n        <h5 id=\"bp-nav-babyPatrolText\">\r\n          <NavLink to=\"/\">BabyPatrol</NavLink>\r\n        </h5>\r\n      </div>\r\n      {navLinks}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nimport Footer from \"./Footer\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nimport \"./layout.css\";\r\n\r\nconst Layout = props => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div>{props.children}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { loginUserToFirebase } from \"../../controllers/firebaseDB\";\r\n\r\nconst Login = props => {\r\n  const { isAuthed, userLoggedIn } = useContext(AuthContext);\r\n  const [loginInfo, setLoginInfo] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setLoginInfo({\r\n      ...loginInfo,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (loginInfo.email.length && loginInfo.password.length) {\r\n      loginUserToFirebase(loginInfo.email, loginInfo.password)\r\n        .then(res => {\r\n          if (res.user.uid) {\r\n            userLoggedIn(res.user.uid);\r\n          } else {\r\n            setValidationErrors(\r\n              \"Ooops, something went wrong. Please try again in a few minutes.\"\r\n            );\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setValidationErrors(err.message);\r\n        });\r\n    } else {\r\n      setValidationErrors(\"Please fill all necessary fields\");\r\n    }\r\n  };\r\n\r\n  const redirectAuthedUser = () => {\r\n    if (isAuthed) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"bp-loginPage\">\r\n      { redirectAuthedUser() }\r\n      <h1>Please Sign In To Your BabyPatrol Account</h1>\r\n      <form className=\"bp-form-login\" onSubmit={handleSubmit}>\r\n        {validationErrors ? (\r\n          <span className=\"bp-loginErrorMsg\">\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <em> {validationErrors} </em>\r\n          </span>\r\n        ) : null}\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"email\"\r\n          className=\"bp-userInput\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={loginInfo.email}\r\n          aria-label=\"email\"\r\n          placeholder=\"Email\"\r\n          min=\"9\"\r\n          required\r\n          autoFocus\r\n        />\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"password\"\r\n          className=\"bp-userInput\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={loginInfo.password}\r\n          aria-label=\"password\"\r\n          placeholder=\"Password\"\r\n          min=\"6\"\r\n          required\r\n        />\r\n        <input className=\"bp-form-button\" type=\"submit\" value=\"LOGIN\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export const validateMinLength = (str, minLength) => str && str.length >= minLength;\r\n\r\nexport const pwdMatch = (pwdA, pwdB) => {\r\n  return (\r\n    pwdA            &&\r\n    pwdA.length > 0 &&\r\n    pwdB            &&\r\n    pwdB.length > 0 &&\r\n    pwdA === pwdB\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { validateMinLength, pwdMatch } from \"../../controllers/inputValidator\";\r\n\r\nimport { registerUser } from \"../../controllers/firebaseDB\";\r\n//import CountriesList from \"./CountriesList\";\r\n\r\nconst Register = props => {\r\n  const { isAuthed, userLoggedIn } = useContext(AuthContext);\r\n  const [registerInfo, setRegisterInfo] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    country: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    babyName: \"\"\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    country: false,\r\n    email: false,\r\n    password: false,\r\n    confirmPassword: false,\r\n    babyName: false,\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setRegisterInfo({\r\n      ...registerInfo,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const validEmail = validateMinLength(registerInfo.email, 9);\r\n    const validPwdLength = validateMinLength(registerInfo.password, 6);\r\n    const validPwdMatch = pwdMatch(\r\n      registerInfo.password,\r\n      registerInfo.confirmPassword\r\n    );\r\n\r\n    if (validEmail && validPwdLength && validPwdMatch) {\r\n      registerUser(\r\n        registerInfo.email,\r\n        registerInfo.password,\r\n        registerInfo.babyName\r\n      )\r\n        .then(uid => userLoggedIn(uid))\r\n        .catch(err => console.error(`Error at registerUser() [Register.jsx]`));\r\n    } else {\r\n      setValidationErrors({\r\n        email: validEmail ? false : \"Your email looks too short.\",\r\n        password: validPwdLength\r\n          ? false\r\n          : \"Your password needs to be at least 6 characters long.\",\r\n        confirmPassword: validPwdMatch ? false : \"Passwords do not match.\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const redirectAuthedUser = () => {\r\n    if (isAuthed) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"bp-registerPage\">\r\n      {redirectAuthedUser()}\r\n      <h1 className=\"h3 mb-3 font-weight-normal\">\r\n        Create Your BabyPatrol Account\r\n      </h1>\r\n      <form className=\"form-register\" onSubmit={handleSubmit}>\r\n        {/* <input\r\n          onChange={handleInputChange}\r\n          id=\"firstName\"\r\n          className=\"bp-userInput\"\r\n          type=\"firstName\"\r\n          name=\"firstName\"\r\n          value={registerInfo.firstName}\r\n          placeholder=\"First Name\"\r\n          aria-label=\"First Name\"\r\n          required\r\n          autoFocus\r\n        />\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"lastName\"\r\n          className=\"bp-userInput\"\r\n          type=\"lastName\"\r\n          name=\"lastName\"\r\n          value={registerInfo.lastName}\r\n          placeholder=\"Last Name\"\r\n          aria-label=\"Last Name\"\r\n          required\r\n        /> */}\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"babyName\"\r\n          className=\"bp-userInput\"\r\n          type=\"babyName\"\r\n          name=\"babyName\"\r\n          value={registerInfo.babyName}\r\n          placeholder=\"Baby's Name\"\r\n          aria-label=\"Baby's Name\"\r\n          required\r\n        />\r\n        {/* <CountriesList selection={handleInputChange} /> */}\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"email\"\r\n          className=\"bp-userInput\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={registerInfo.email}\r\n          placeholder=\"Email\"\r\n          aria-label=\"Email\"\r\n          required\r\n        />\r\n        {validationErrors.email ? (\r\n          <span className=\"bp-inputMsg\">\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <em> {validationErrors.email} </em>\r\n          </span>\r\n        ) : null}\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"password\"\r\n          className=\"bp-userInput\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={registerInfo.password}\r\n          placeholder=\"Password\"\r\n          aria-label=\"Password\"\r\n          required\r\n          //minLength=\"6\"\r\n        />\r\n        {validationErrors.password ? (\r\n          <span className=\"bp-inputMsg\">\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <em> {validationErrors.password} </em>\r\n          </span>\r\n        ) : null}\r\n        <input\r\n          onChange={handleInputChange}\r\n          id=\"confirmPassword\"\r\n          className=\"bp-userInput\"\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={registerInfo.confirmPassword}\r\n          placeholder=\"Confirm Password\"\r\n          aria-label=\"Confirm Password\"\r\n          //minLength=\"6\"\r\n          required\r\n        />\r\n        {validationErrors.confirmPassword ? (\r\n          <span className=\"bp-inputMsg\">\r\n            <i className=\"fas fa-exclamation-circle\"></i>\r\n            <em> {validationErrors.confirmPassword} </em>\r\n          </span>\r\n        ) : null}\r\n        <input className=\"bp-form-button\" type=\"submit\" value=\"REGISTER\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nimport { format, isSameDay } from \"date-fns\";\r\nimport activities from \"../../config/activities\";\r\n\r\nconst ReportTable = ({ data }) => {\r\n  const getEmoji = activityString =>\r\n    activities.filter(act => act.label === activityString)[0].icon;\r\n\r\n  let content = <h2>Loading...</h2>;\r\n  let rows = null;\r\n\r\n  if (!data || data.length === 0) {\r\n    content = (\r\n      <h2>\r\n        No data available. Try adding a few events in the{\" \"}\r\n        <a href=\"/dashboard\">dashboard</a>\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  if (data && data.length) {\r\n    let prevRowData = \"\";\r\n\r\n    rows = data.map((row, i) => {\r\n      if (isSameDay(row.time.toDate(), prevRowData)) {\r\n        return (\r\n          <tr key={i}>\r\n            <td></td>\r\n            <td>{format(row.time.toDate(), \"h:mm a\")}</td>\r\n            <td>{row.type}</td>\r\n            <td>{getEmoji(row.type)}</td>\r\n          </tr>\r\n        );\r\n      } else {\r\n        prevRowData = row.time.toDate();\r\n        return (\r\n          <>\r\n            <tr key={i}>\r\n              <td colSpan=\"4\" className=\"bp-table-dateCell\">\r\n                {format(row.time.toDate(), \"eeee, MMM d / yyyy\")}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td>{format(row.time.toDate(), \"h:mm a\")}</td>\r\n              <td>{row.type}</td>\r\n              <td>{getEmoji(row.type)}</td>\r\n            </tr>\r\n          </>\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!rows) {\r\n    return <>{content}</>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"bp-report-tableContainer\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Time</th>\r\n            <th>Activity</th>\r\n            <th>Icon</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportTable;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { BabyRecordsContext } from \"../../contexts/BabyRecordsContext\";\r\n\r\nimport ReportTable from \"./ReportTable\";\r\n\r\nconst Reports = props => {\r\n  const { babyRecords } = useContext(BabyRecordsContext);\r\n  const { isAuthed } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div id=\"bp-reports\">\r\n      {!isAuthed ? <Redirect to=\"/login\" /> : null}\r\n      <ReportTable data={babyRecords} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport BabyRecordsContextProvider from \"./contexts/BabyRecordsContext\";\r\nimport AuthContextProvider from \"./contexts/AuthContext\";\r\n\r\nimport Home from \"./components/Layout/Home\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Login from \"./components/Auth/Login.jsx\";\r\nimport Register from \"./components/Auth/Register.jsx\";\r\nimport Reports from \"./components/Reports/Reports.jsx\";\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <AuthContextProvider>\r\n      <BabyRecordsContextProvider>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/reports\" component={Reports} />\r\n          </Switch>\r\n        </Layout>\r\n      </BabyRecordsContextProvider>\r\n    </AuthContextProvider>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}